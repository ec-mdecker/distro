<?php
/**
 * @file
 * Code for the Feature Basic Content feature.
 */

include_once 'feature_basic_content.features.inc';

/*
 * Implements hook_views_query_alter().
 */
function feature_basic_content_views_query_alter(&$view, &$query) {
  if ($view->name == 'draggable_views') {
    $query->where[] = $query->where[1];
    $query->where[2]['conditions'][0]['value'] = '0';

    $query->where[1]['conditions'][] = $query->where[0]['conditions'][0];
    $query->where[2]['conditions'][] = $query->where[0]['conditions'][0];

    $query->where[1]['conditions'][] = $query->where[0]['conditions'][2];
    $query->where[2]['conditions'][] = $query->where[0]['conditions'][1];

    unset($query->where[0]);
  }
}

/**
 * Implementes hook_preprocess_views_view_table().
 */
function feature_basic_content_preprocess_views_view_table(&$vars) {
  static $counter;
  if (!isset($counter)) {
    $counter = 1;
  }
  // Check whether this table view has draggableview field.
  if (!isset($vars['view']->field['draggableviews'])) {
    return;
  }
  // Check permissions.
  if (!user_access('access draggableviews')) {
    return;
  }
  // Add table class.
  $vars['classes_array'][] = 'draggable';
  // Add row class.
  foreach ($vars['row_classes'] as &$row_classes) {
    $row_classes[] = 'draggable';
  }
  $vars['attributes_array']['id'] = 'draggableviews-table-' . $vars['view']->name . '-' . $vars['view']->current_display . '-' . $counter;
  // Add javascript.
  drupal_add_tabledrag($vars['attributes_array']['id'], 'order', 'sibling', 'draggableviews-weight');
  $counter++;
}